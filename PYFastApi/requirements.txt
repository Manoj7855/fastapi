1. python -m venv .venv
2. .venv\Scripts\Activate
3. pip install fastapi
4. pip install uvicorn
5. uvicorn main:app --reload


******
pathparameter

from fastapi import FastAPI


emp=[
    {'id':101,'name':'manoj','place':'chennai'},
    {'id':102,'name':'sam','place':'trichy'}
]


app= FastAPI()

@app.get("/display/{id}")
def view(id:int):
    for e in emp:
        if e['id']==id:
            return e



from fastapi import FastAPI


emp=[
    {'id':101,'name':'manoj','place':'chennai'},
    {'id':102,'name':'sam','place':'trichy'}
]


app= FastAPI()

@app.get("/display/{name}")
def view(name:str):
    for e in emp:
        if e['name']==name:
            return e

*************

***************1
Request Body in Fast API

from fastapi import FastAPI
from pydantic import BaseModel

class items(BaseModel):
    name:str
    price:float
    avilability:bool

app= FastAPI()


@app.post("/display/")
def view(data:items):
    return {"messsage": "Item Recived", "data":data}



from fastapi import FastAPI
from pydantic import BaseModel
from typing import Optional

class items(BaseModel):
    name:str
    price:float
    avilability: Optional[bool] = None

app= FastAPI()


@app.post("/display/")
def view(data:items):
    return {"messsage": "Item Recived", "data":data}
****************


**************2
Request Body Validation

from fastapi import FastAPI
from pydantic import BaseModel,Field
from typing import Optional

class items(BaseModel):
    name:str = Field(min_length=3,max_length=50,pattern="^[a-zA-Z]")
    price:float=Field(gt=0,lt=10000)
    avilability: Optional[bool] = None

app= FastAPI()


@app.post("/display/")
def view(data:items):
    return {"messsage": "Item Recived", "data":data}

************



**************3
Request Body Nested Models

from fastapi import FastAPI
from pydantic import BaseModel,Field
from typing import Optional



class manf(BaseModel):
    company:str
    contry:str


class items(BaseModel):
    name:str = Field(min_length=3,max_length=50,pattern="^[a-zA-Z]")
    price:float=Field(gt=0,lt=10000)
    avilability: Optional[bool] = None
    manufacturar:manf

app= FastAPI()


@app.post("/display/")
def view(data:items):
    return {"messsage": "Item Recived", "data":data}
***********



